#!/usr/bin/env ruby

# So I can use compass
require 'compass'
Compass.add_project_configuration 'compass_config.rb'

# Generate Slugs
require 'to_slug'

# Process Pandoc in :title attributes
require 'pandoc-ruby'
require 'hpricot'

preprocess do
  # Delete Drafts
  @items.delete_if { |i| i[:draft] }

  # Process Pandoc in :title attributes
  @items.each do |item|
    if item[:title]
      item[:slug] = item[:title].to_slug
      title = item[:title]
      title = PandocRuby.convert(title)
      html = Hpricot(title)
      titles = html.search("p")
      title = titles[0].inner_html
      item[:title] = title
    end
  end

  # Mark assets with the 'is_hidden' attribute so they don't appear in the site
  # map. Note things from the static fs are automatically marked as hidden.
  @items.each do |item|
    if item[:filename].start_with? 'content/assets/'
      item[:is_hidden] = true
    end
  end
end

# Don't compile partials
ignore '**/_*'

compile '/assets/stylesheets/*' do
  filter :sass, Compass.sass_engine_options
end

route '/assets/stylesheets/*' do
  item.identifier.without_ext + '.css'
end

compile '/posts/**/*.pandoc' do
  ext = item.identifier.ext
  if ext == 'pandoc'
    filter :pandoc, args: [:no_highlight]
    filter :pygments
  else
    raise "Unknown ext: #{ext} with item: #{item.attributes}"
  end

  layout '/default.haml'
end

route '/posts/**/*.pandoc' do
  date = item[:created_at]
  raise "No Posted Date!" if date.nil?
  slug = item[:slug]
  raise "No post slug!" if slug.nil?

  "/blog/#{date.year}/#{date.month}/#{date.day}/#{slug}/index.html"
end

compile '**/*.pandoc' do
  filter :pandoc
  layout "/default.haml"
end

route '**/*.pandoc' do
  # Write item with identifier /foo.pandoc to /foo/index.html
  item.identifier.without_ext + '/index.html'
end

compile '**/*.tex' do
  filter :latex
end

route '**/*.tex' do
  item.identifier.without_ext + '.pdf'
end

compile '**/*.txt' do
end

route '**/*.txt' do
  item.identifier.to_str
end

compile '**/*.erb' do
  filter :erb
end

route '**/*.erb' do
  item.identifier.without_ext
end

# Just copy the binary assets over
passthrough '/assets/images/**/*'
passthrough '/assets/fonts/**/*'
passthrough '/favicon.ico'

compile '**/*.haml' do
  filter :haml, :format => :html5
  layout "/default.haml"
end

route '/index.haml' do
  '/index.html'
end

route '**/*.haml' do
  # Write item with identifier /foo.haml to /foo/index.html
  item.identifier.without_ext + '/index.html'
end

layout '**/*.haml', :haml, :format => :html5
